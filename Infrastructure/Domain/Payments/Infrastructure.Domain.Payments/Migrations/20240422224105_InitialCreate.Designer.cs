// <auto-generated />
using System;
using Infrastructure.Domain.Payments.Context.Implementations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Domain.Payments.Migrations
{
    [DbContext(typeof(PaymentsPostgresContext))]
    [Migration("20240422224105_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Payments.Models.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bankcode");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bankname");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("numeric")
                        .HasColumnName("interestrate");

                    b.HasKey("Id");

                    b.ToTable("bank", (string)null);
                });

            modelBuilder.Entity("Domain.Payments.Models.PaymentSlip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BankId")
                        .HasColumnType("integer")
                        .HasColumnName("bankid");

                    b.Property<string>("BeneficiaryDocument")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("beneficiarydocument");

                    b.Property<string>("BeneficiaryName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("beneficiaryname");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("duedate");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("observation");

                    b.Property<string>("PayerDocument")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("payerdocument");

                    b.Property<string>("PayerName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("payername");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("paymentslip", (string)null);
                });

            modelBuilder.Entity("Domain.Payments.Models.PaymentSlip", b =>
                {
                    b.HasOne("Domain.Payments.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });
#pragma warning restore 612, 618
        }
    }
}
